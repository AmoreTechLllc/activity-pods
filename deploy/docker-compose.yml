version: '3.5'
services:
  traefik:
    image: traefik:v2.3
    container_name: traefik
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
      - '--entrypoints.web.http.redirections.entrypoint.permanent=true'
      - '--certificatesresolvers.myresolver.acme.tlschallenge=true'
      - '--certificatesresolvers.myresolver.acme.email=myemail@mydomain.com'
      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - ./data/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  fuseki:
    image: semapps/jena-fuseki-webacl
    container_name: fuseki
    volumes:
      - ./data/fuseki:/fuseki
    ports:
      - '3030:3030'
    expose:
      - '3030'
    environment:
      ADMIN_PASSWORD: 'mypassword'

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      - fuseki
      - redis
    volumes:
      - ./backend/logs:/app/backend/logs
      - ./backend/actors:/app/backend/actors
      - ./backend/jwt:/app/backend/jwt
      - ./backend/uploads:/app/backend/uploads
    expose:
      - '3000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pods.rule=Host(`mydomain.com`)'
      - 'traefik.http.routers.pods.entrypoints=websecure'
      - 'traefik.http.routers.pods.tls.certresolver=myresolver'

  frontend:
    build: ./frontend
    container_name: frontend
    depends_on:
      - backend
    restart: always
    expose:
      - '4000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`app.mydomain.com`)'
      - 'traefik.http.routers.frontend.entrypoints=websecure'
      - 'traefik.http.routers.frontend.tls.certresolver=myresolver'

  redis:
    image: redis
    container_name: redis
    expose:
      - '6379'
    volumes:
      - ./data/redis:/data
    command: ['redis-server', '--appendonly', 'yes']

  arena:
    build: ./arena/Dockerfile
    container_name: arena
    restart: always
    volumes:
      - ./arena/config:/opt/arena/src/server/config
    depends_on:
      - redis
    ports:
      - '4567:4567'
    environment:
      REDIS_HOST: 'redis'
